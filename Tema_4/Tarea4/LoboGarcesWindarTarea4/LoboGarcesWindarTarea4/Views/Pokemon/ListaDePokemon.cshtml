@model LoboGarcesWindarTarea4.Models.PokemonViewModel

@{
    ViewData["Title"] = "ListaDePokemon";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
   
    <link href="https://fonts.googleapis.com/css2?family=EB+Garamond&display=swap" rel="stylesheet">
}



<div class="container-fluid mt-5">
    <form asp-action="FiltrarPokemon" method="post">
        <div class="row ">

            <div class="col-md-3 col-lg-2 mt-2">

                <img src="/img/Pokemon-Logo.jpg" class="imag2 img-fluid" style="width:13rem" alt="Pokemon" />


            </div>

            <div class="col-md-3 col-lg-3">

                <select class="form-select" aria-label="Tipo de Pokémon" id="tipoPokemon" name="tipo">

                    <option selected>Selecciona un tipo</option>

                    @foreach (var tipo in Model.Tipos.OrderBy(t => t.TipoNombre))
                    {
                        <option value="@tipo.TipoId">@tipo.TipoNombre</option>
                    }

                </select>

            </div>

            <div class="col-md-2 col-lg-3">

                <select class="form-select" aria-label="Peso de Pokémon" id="pesoPokemon" name="peso">

                    <option selected>Selecciona un peso</option>

                    @foreach (var peso in Model.Pokemons.OrderBy(p => p.Peso).Select(p => p.Peso).Distinct())
                    {
                        <option value="@peso">@peso</option>
                    }
                </select>
            </div>
            <div class="col-md-3 col-lg-3">

                <select class="form-select" aria-label="Altura de Pokémon" id="alturaPokemon" name="altura">
                    <option selected>Selecciona una altura</option>
                    @foreach (var altura in Model.Pokemons.OrderBy(a => a.Altura).Select(a=>a.Altura).Distinct())
                    {
                        <option value="@altura">@altura</option>
                    }
                </select>
            </div>
            <div class="col-md-2 col-lg-1">
                <button type="submit" class="btn " style="background-color:#CB4335;color: #fff; font-size:18px">Buscar</button>
            </div>
        </div>



    </form>
    </div>

    @{
        // Definir un diccionario de colores para los tipos de Pokémon
        Dictionary<string, string> coloresPorTipo = new Dictionary<string, string>
    {
    { "Fuego", "#F28723" },
    { "Veneno", "#9B82AA" },
    { "Agua", "#72C1EB" },
    { "Planta", "#3AB27B" },
    { "Eléctrico", "#FFD700" },
    { "Roca", "#8E8651" },
    {"Normal","#999C9E"},
    {"Bicho","#66AD71"},
    {"Psíquico","#C462DE"},
    {"Lucha","#B66341"},
    {"Hielo","#B0FAF0"},
    {"Fantasma","#86578B"},
    };
    }


    @if (TempData["MensajeExito"] != null)
    {
        <div id="mensaje-exito" class="alert alert-success">@TempData["MensajeExito"]</div>

    }

    @if (TempData["MensajeError"] != null)
    {
        <div id="mensaje-error" class="alert alert-danger">@TempData["MensajeError"]</div>
    }

@if (Model.Pokemons.Any())
{
    <div class="container-fluid">


        <table class="table table-striped table-hover">
            <thead>
                <tr style="font-family: 'EB Garamond', serif; font-size:20px">
                    <th>
                        @Html.DisplayNameFor(model => model.Pokemons.First().Imagen)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Pokemons.First().PokemonId)

                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Pokemons.First().NombrePokemon)

                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Pokemons.First().Tipos)

                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Pokemons.First().Peso)

                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Pokemons.First().Altura)

                    </th>

                    <th></th>
                    <th></th>

                </tr>

            </thead>

            <tbody>

                @foreach (var item in Model.Pokemons)
                {
                    string rutaImagen = $"/img/{item.PokemonId}.png";

                    <tr style="font-family: 'EB Garamond', serif; font-size:20px">
                        <td>
                            <a href="@Url.Action("Detalle", new { numero_Pokedex = item.PokemonId })">
                                <img src="@rutaImagen" class="img-fluid" style="width:8rem" />
                            </a>


                        </td>

                        <td>

                            @Html.DisplayFor(modelItem => item.PokemonId)

                        </td>

                        <td>

                            @Html.DisplayFor(modelItem => item.NombrePokemon)

                        </td>
                        <td>


                            @foreach (var tipo in item.AllTipos.Split(','))

                            {
                                <div class="row  mt-3">
                                    <div class="col-md-8"
                                         style="@(tipo.Trim() == "Volador" ? "background: linear-gradient(to bottom, #87CEEB 60%, #B6B6B6 40%);"
                                             : (tipo.Trim() == "Tierra" ? "background: linear-gradient(to bottom, #CBBA0C 50%, #A39E6C 50%);"
                                     : (tipo.Trim() == "Dragón" ? "background: linear-gradient(to bottom, #F63950 50%, #609FEA 50%);" :"background-color: " + (coloresPorTipo.ContainsKey(tipo.Trim()) ? coloresPorTipo[tipo.Trim()] : "#FFFFFF") + ";")))">
                                        @tipo.Trim()
                                    </div>
                                </div>
                            }

                        </td>

                        <td>

                            @Html.DisplayFor(modelItem => item.Peso)

                        </td>

                        <td>

                            @Html.DisplayFor(modelItem => item.Altura)

                        </td>


                        <td>

                            <form asp-action="AgregarAlEquipo" asp-route-numero_Pokedex="@item.PokemonId" method="post">

                                <button type="submit" class="btn" style="background-color:#CB4335;color: #fff; font-size:18px;">Añadir a Mi Equipo</button>

                            </form>


                        </td>

                    </tr>
                }

            </tbody>


        </table>

    </div>
}
else
{
    TempData["MensajeError"] = "No existen pokemon con los filtros indicados.";
    <div id="mensaje-error" class="alert alert-danger">@TempData["MensajeError"]</div>
}






<script>

    // Agrega un script para ocultar los mensajes después de un segundo

    setTimeout(function () {

        $("#mensaje-exito, #mensaje-error").fadeOut(1000);

    }, 3000);

</script>


