@model LoboGarcesWindarTarea4.Models.SimularCombateViewModel

@{
    ViewData["Title"] = "LucharConMiEquipo";

    Layout = "~/Views/Shared/_Layout.cshtml";

    <link href="https://fonts.googleapis.com/css2?family=Cormorant:wght@600&family=Fjalla+One&display=swap" rel="stylesheet">

    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
          integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
          crossorigin="anonymous"
          referrerpolicy="no-referrer" />

}

@{
    // Definir un diccionario de colores para los tipos de Pokémon

    Dictionary<string, string> coloresPorTipo = new Dictionary<string, string>
                        {
                        { "Fuego", "#F28723" },
                        { "Veneno", "#9B82AA" },
                        { "Agua", "#72C1EB" },
                        { "Planta", "#3AB27B" },
                        { "Eléctrico", "#FFD700" },
                        { "Roca", "#8E8651" },
                        {"Normal","#999C9E"},
                        {"Bicho","#66AD71"},
                        {"Psíquico","#C462DE"},
                        {"Lucha","#B66341"},
                        {"Hielo","#B0FAF0"},
                        {"Fantasma","#86578B"},
                        };
}

@if (Model.ConMiEquipo)
{
    <h3 class="text-center mt-5" style="font-family: 'Cormorant', serif; font-size:50px;color:#E74C3C">Combate con mi equipo</h3>
}
else
{
    <h3 class="text-center mt-5" style="font-family: 'Cormorant', serif; font-size:50px;color:#E74C3C">Combate aleatoria</h3>
}


<div class="container ColorTable rounded-3">

    <h3 class="text-center mt-5" style="font-family: 'EB Garamond', serif; font-size:40px">Equipo1</h3>

    <div class="row flex-wrap mt-3">

        @foreach (var pokemon in Model.Batalla.Equipo1.Pokemons)
        {
            string rutaImagenEquipo1 = $"/img/{pokemon.PokemonId}.png";

            <!-- Ajusta el valor de mb-3 según sea necesario -->

            <div class="col d-flex flex-column align-items-center">

                <img src="@rutaImagenEquipo1" alt="Imagen equipo 1" class="img-fluid" style="width:150px;" />

                <div class="mt-2 text-center">

                    @Html.DisplayFor(modelItem => pokemon.NombrePokemon)

                    N.º&nbsp;@Html.DisplayFor(modelItem => pokemon.PokemonId)

                    <div class="row">
                        @foreach (var tipo in pokemon.Tipos)
                        {
                            <div class="col-md-8 rounded  mt-2"
                                 style="@(tipo.TipoNombre == "Volador" ? "background: linear-gradient(to bottom, #87CEEB 60%, #B6B6B6 40%);"

                        : (tipo.TipoNombre == "Tierra" ? "background: linear-gradient(to bottom, #CBBA0C 50%, #A39E6C 50%);"

                        : (tipo.TipoNombre == "Dragón" ? "background: linear-gradient(to bottom, #F63950 50%, #609FEA 50%);" : "background-color: " + (coloresPorTipo.ContainsKey(tipo.TipoNombre) ? coloresPorTipo[tipo.TipoNombre] : "#FFFFFF") + ";")))">

                                <div class="p-1"> @tipo.TipoNombre</div>

                            </div>
                        }

                    </div>

                </div>

            </div>

        }
    </div>
</div>

<div class="container ColorTable rounded-3">

    <h3 class="text-center mt-5" style="font-family: 'EB Garamond', serif; font-size:40px">Equipo2</h3>

    <div class="row flex-wrap mt-3">

        @foreach (var pokemon in Model.Batalla.Equipo2.Pokemons)
        {
            string rutaImagenEquipo2 = $"/img/{pokemon.PokemonId}.png";

            <!-- Ajusta el valor de mb-3 según sea necesario -->

            <div class="col d-flex flex-column align-items-center">

                <img src="@rutaImagenEquipo2" alt="Imagen de la evolución" class="img-fluid" style="width:150px;" />

                <div class="mt-2 text-center">

                    @Html.DisplayFor(modelItem => pokemon.NombrePokemon)

                    N.º&nbsp;@Html.DisplayFor(modelItem => pokemon.PokemonId)

                    <div class="row">
                        @foreach (var tipo in pokemon.Tipos)
                        {
                            <div class="col-md-8 rounded  mt-2"
                                 style="@(tipo.TipoNombre == "Volador" ? "background: linear-gradient(to bottom, #87CEEB 60%, #B6B6B6 40%);"

                        : (tipo.TipoNombre == "Tierra" ? "background: linear-gradient(to bottom, #CBBA0C 50%, #A39E6C 50%);"

                        : (tipo.TipoNombre == "Dragón" ? "background: linear-gradient(to bottom, #F63950 50%, #609FEA 50%);" : "background-color: " + (coloresPorTipo.ContainsKey(tipo.TipoNombre) ? coloresPorTipo[tipo.TipoNombre] : "#FFFFFF") + ";")))">

                                <div class="p-1"> @tipo.TipoNombre</div>

                            </div>
                        }

                    </div>


                </div>
            </div>

        }

    </div>

</div>



<!-- Ajusta el valor de mb-3 según sea necesario -->



<div class="container ColorTable rounded-3 mt-5">

    <h3 class="text-center " style="font-family: 'EB Garamond', serif; font-size:40px">Batalla</h3>

    @{
        int contadorCombate = 1;
    }

    @foreach (var combate in Model.Batalla.Combates)
    {


        <h3> Combate @contadorCombate</h3>

        string rutaImagenEquipo1 = $"/img/{combate.Pokemon1.PokemonId}.png";

        string rutaImagenEquipo2 = $"/img/{combate.Pokemon2.PokemonId}.png";

        <div class="col d-flex flex-column align-items-center">

            <div class="row">

                <div class="col text-center">

                    <img src="@rutaImagenEquipo1" alt="Imagen batalla" class="img-fluid" style="width:180px;" />

                    @Html.DisplayFor(modelItem => combate.Pokemon1.NombrePokemon)

                    N.º&nbsp;@Html.DisplayFor(modelItem => combate.Pokemon1.PokemonId)    <br />



                    <div class="row justify-content-center">

                        @foreach (var tipo in combate.Pokemon1.Tipos)
                        {
                            <div class="col-5 d-inline-block mx-2 mb-5 rounded"
                                 style="@(tipo.TipoNombre == "Volador" ? "background: linear-gradient(to bottom, #87CEEB 60%, #B6B6B6 40%);"

                         : (tipo.TipoNombre == "Tierra" ? "background: linear-gradient(to bottom, #CBBA0C 50%, #A39E6C 50%);"

                         : (tipo.TipoNombre == "Dragón" ? "background: linear-gradient(to bottom, #F63950 50%, #609FEA 50%);" :
                         "background-color: " + (coloresPorTipo.ContainsKey(tipo.TipoNombre) ? coloresPorTipo[tipo.TipoNombre] : "#FFFFFF") + ";")))">

                                <div class="p-1"> @tipo.TipoNombre</div>

                            </div>


                        }
                    </div>

                </div>


                <div class="col text-center ">

                    <h1> Vs</h1>

                </div>

                <div class="col text-center">

                    <img src="@rutaImagenEquipo2" alt="Imagen batalla" class="img-fluid" style="width:180px;" />

                    @Html.DisplayFor(modelItem => combate.Pokemon2.NombrePokemon)

                    N.º&nbsp;@Html.DisplayFor(modelItem => combate.Pokemon2.PokemonId)<br />

                    <div class="row justify-content-center ">


                        @foreach (var tipo in combate.Pokemon2.Tipos)
                        {
                            <div class="col-5 d-inline-block mx-2 mb-5  rounded"
                                 style="@(tipo.TipoNombre == "Volador" ? "background: linear-gradient(to bottom, #87CEEB 60%, #B6B6B6 40%);"

                         : (tipo.TipoNombre == "Tierra" ? "background: linear-gradient(to bottom, #CBBA0C 50%, #A39E6C 50%);"

                         : (tipo.TipoNombre == "Dragón" ? "background: linear-gradient(to bottom, #F63950 50%, #609FEA 50%);" :
                         "background-color: " + (coloresPorTipo.ContainsKey(tipo.TipoNombre) ? coloresPorTipo[tipo.TipoNombre] : "#FFFFFF") + ";")))">

                                <div class="p-1"> @tipo.TipoNombre</div>

                            </div>
                        }

                    </div>
                </div>

            </div>

            <div class=" d-inline-block" style="color:#E74C3C">

                <span class="text-center " style="font-family: 'EB Garamond', serif; font-size:20px">

                    Ganador :  @combate.Ganador.Pokemon.NombrePokemon <i class="fa-sharp fa-solid fa-medal "></i> -  @combate.Ganador.Motivo

                </span>
            </div>

        </div>

        contadorCombate++;
    }
</div>





